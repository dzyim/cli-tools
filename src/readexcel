#!/usr/bin/env Rscript
#' @author dzyim.liang

library(data.table)
library(readxl)

#' Convert the given Excel file to a plain text using readxl::read_excel().
#' Results may be different due to the version of the local `readxl` package.
#' The argument `path` must be a Path to the xls/xlsx file. A text is invalid.
#' The argument `sheet` must be the serial number (integer) of your sheet.
#' The argument `trim_ws` is for trimming whitespace or not.
#' The argument `col_names` is for using the first row as column names or not.
#' THe default value for `col_names` is FALSE to avoid unexpected processing.
readexcel <- function(
	path, sheet = 1, trim_ws = TRUE, col_names = FALSE, outfile = "", sep = "\t"
) {
	NA_VALUES = c("")
	USAGE = "\nUsage:
	readexcel <Excelfile> [sheetNum=1] (trim_ws=T) (col_names=F)
	readexcel <Excelfile> [sheetNum=1] (trim_ws=T) (col_names=F) | less
	readexcel <Excelfile> [sheetNum=1] (trim_ws=T) (col_names=F) > out.txt
	"
	if (missing(path)) {
		write(USAGE, stderr())
		quit(status = 1)
	} else if (length(path) != 1) {
		write(USAGE, stderr())
		quit(status = 1)
	} else if (is.na(path)) {
		write(USAGE, stderr())
		quit(status = 1)
	} else if (startsWith(path, "-")) {
		write(USAGE, stderr())
		quit(status = 1)
	} else if (!file.exists(path)) {
		write("[ERROR] The input file does not exist!", stderr())
		quit(status = 1)
	}
	sheet = suppressWarnings(as.integer(sheet))
	if (is.na(sheet)) {
		sheet = 1
	}
	trim_ws = as.logical(trim_ws)
	if (is.na(trim_ws)) {
		trim_ws = TRUE
	}
	col_names = as.logical(col_names)
	if (is.na(col_names)) {
		col_names = FALSE
	}
	E = tryCatch(
		suppressMessages(
			read_excel(path, sheet, col_names = col_names, 
					na=NA_VALUES, trim_ws=trim_ws)
			), 
		error = function(e) e
		)
	if (inherits(E, "tbl_df")) {
		fwrite(E, outfile, quote = FALSE, sep = sep, col.names = col_names)
	} else {
		write(paste("[ERROR]", E[["message"]]), stderr())
		quit(status = 1)
	}
}

if (sys.nframe() == 0) {
	Args = commandArgs(TRUE)
	readexcel(Args[1], Args[2], Args[3], Args[4])
}
